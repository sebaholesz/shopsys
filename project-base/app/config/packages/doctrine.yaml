doctrine:
    dbal:
        driver: "%database_driver%"
        host: "%env(DATABASE_HOST)%"
        port: "%env(DATABASE_PORT)%"
        dbname: "entity_extension_test"
        user: "%env(DATABASE_USER)%"
        password: "%env(DATABASE_PASSWORD)%"
        charset: UTF8
        # Explicitly define server version to overcome the need to connect to the database in early
        # initialization phase (during DIC service creation) for auto-detecting version from the server.
        # See \Doctrine\DBAL\Connection::getDatabasePlatformVersion().
        server_version: "%database_server_version%"
        types:
            money:
                class: \Shopsys\FrameworkBundle\Component\Doctrine\MoneyType
            tsvector:
                class: \Intaro\PostgresSearchBundle\DBAL\TsvectorType
    orm:
        auto_generate_proxy_classes: false
        dql:
            string_functions:
                bool_and: App\Component\Doctrine\BoolAndFunction
                collate: Shopsys\FrameworkBundle\Component\Doctrine\CollateFunction
                normalize: Shopsys\FrameworkBundle\Component\Doctrine\NormalizeFunction
                field: Shopsys\FrameworkBundle\Component\Doctrine\FieldFunction
        naming_strategy: doctrine.orm.naming_strategy.underscore
        metadata_cache_driver:
            type: pool
            pool: doctrine.metadata_cache_pool
        query_cache_driver:
            type: pool
            pool: doctrine.query_cache_pool
        auto_mapping: false
        mappings:
            EntityExtensionTest:
                type: annotation
                dir: '%shopsys.framework.root_dir%/tests/Functional/EntityExtension/Model'
                alias: EntityExtensionTest
                prefix: Tests\FrameworkBundle\Functional\EntityExtension\Model
                is_bundle: false
        hydrators:
            GroupedScalarHydrator: \Shopsys\FrameworkBundle\Component\Doctrine\GroupedScalarHydrator
